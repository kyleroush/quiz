{"version":3,"sources":["Questions.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","props","centerTypography","renderStart","Grid","container","spacing","justify","alignItems","item","xs","Typography","style","variant","title","Button","fullWidth","setState","phase","renderQuestion","question","state","data","image","desc","maxWidth","src","width","height","sm","renderAnswerButtons","num","selected","answers","color","onClick","submitAnswer","correct","length","isCorrect","console","log","renderAnswer","renderReport","renderPhase","this","React","Component","App","isLoaded","result","error","myParam","URLSearchParams","window","location","search","get","fetch","then","res","json","questions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppBar","position","Toolbar","document","getElementById"],"mappings":"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","file":"static/js/main.1bfaa6ae.chunk.js","sourcesContent":["import { Button, ButtonGroup, Card, Container, Fab, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\n\nclass Questions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: 0,\n      phase: \"READY\",\n      correct: 0,\n      selected: -1,\n    };\n  }\n\n  centerTypography = {\n    \"text-align\": \"center\"\n  }\n\n  renderStart = () => {\n\n    return (\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} >\n          <Typography style={this.centerTypography} variant=\"h4\" >{this.props.title}</Typography>\n        </Grid>\n        <Grid item xs={12} >\n\n          <Button fullWidth={true} fullWidth variant=\"contained\" color=\"primary\" onClick={() => { this.setState({phase: \"QUESTION\"}) }} >Start</Button>\n        </Grid>\n      </Grid>\n    )\n\n  } \n\n  renderQuestion = () => {\n    var { question } = this.state;\n\n    var { image, desc } = this.props.data[question];\n    const divStyle = {\n      maxWidth: 450\n    };\n    return (\n      <div>\n        <div>\n          <div style={divStyle}>\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} >\n              <Typography style={this.centerTypography} variant=\"h5\" >{question+1}) {desc}</Typography>\n              </Grid>\n              <Grid item xs={12} >\n                <img src={image} width={500} height={500} />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {this.renderAnswerButtons(0)}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {this.renderAnswerButtons(1)}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {this.renderAnswerButtons(2)}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {this.renderAnswerButtons(3)}\n              </Grid>\n              <Grid item xs={12} justify=\"center\" alignItems=\"center\">\n                <Button fullWidth={true} fullWidth variant=\"contained\" color=\"primary\" onClick={() => { this.setState({phase: \"ANSWER\"}) }} >Submit</Button>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  } \n\n  renderAnswerButtons = (num) => {\n    var { question, selected } = this.state;\n    var { answers } = this.props.data[question];\n\n    return(<Button fullWidth variant=\"contained\" color={num==selected? \"primary\": \"\"} onClick={() => { this.setState({selected: num}) }} >{answers[num]}</Button>)\n  }\n\n  submitAnswer = () => {\n    var { question, selected } = this.state;\n    var { correct } = this.props.data[question];\n    var phase = question + 1 === this.props.data.length ? \"REPORT\" : \"QUESTION\";\n\n    var isCorrect = correct == selected ? 1:0;\n\n    console.log(selected)\n    console.log(correct)\n    console.log(correct == selected ?   \"CORRECT\": \"WRONG\")\n    this.setState({\n      correct: this.state.correct + isCorrect,\n      selected: -1,\n      question: question + 1,\n      phase: phase\n    });\n  }\n\n  renderAnswer = (num) => {\n    var { question, selected } = this.state;\n    var { answers, correct } = this.props.data[question];\n\n    return(\n      <div>\n        <Typography style={this.centerTypography} variant=\"h5\" >You were {(correct == selected ? \"CORRECT\": \"WRONG\")}</Typography>\n        <Typography style={this.centerTypography} variant=\"h5\" >The answer is {answers[correct]}</Typography>\n        <Button fullWidth={true} fullWidth variant=\"contained\" color=\"primary\" onClick={this.submitAnswer} >\n          Next\n        </Button>\n      </div>\n    );\n  }\n\n  renderReport = () => {\n    var { question, correct } = this.state;\n\n    return(<Typography style={this.centerTypography} variant=\"h5\" >You got {correct} out of {question}.</Typography>)\n  }\n\n  renderPhase = (phase) => {\n    if (phase === \"READY\") {\n      return this.renderStart();\n    }\n    if (phase === \"QUESTION\") {\n      return this.renderQuestion();\n    }\n    if (phase === \"ANSWER\") {\n      return this.renderAnswer();\n    }\n    if (phase === \"REPORT\") {\n      return this.renderReport();\n    }\n    return(<Typography>You shouldn't be here.</Typography>)\n\n  }\n\n  render() {\n    \n    var {phase} = this.state;\n\n    const divStyle = {\n      maxWidth: 500\n    };\n    return(<div style={divStyle}>\n      {this.renderPhase(phase)}\n    </div>)\n\n  }\n}\nexport default Questions;\n","import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Questions from './Questions';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      result: null,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('json');\n    fetch(myParam)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            result: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    var { isLoaded, error, result }  = this.state;\n\n    if(!isLoaded) {\n      return(<Typography>Loading ...</Typography>)\n    }\n\n    if(error !== null) {\n      return(<Typography>There was an error. Please reload and try again.</Typography>)\n    }\n\n    return(\n      <div>\n        <Questions title={result.title} data={result.questions} />\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" >\n          Remy's Quiz\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}